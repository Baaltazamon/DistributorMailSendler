//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DistributorMailSendler.DistributorsDebtors {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.khortitsa.com/wcf/Money/2008", ConfigurationName="DistributorsDebtors.IDistributorsDebtors")]
    public interface IDistributorsDebtors {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateDe" +
            "btorAndOutlet", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateDe" +
            "btorAndOutletResponse")]
        System.Collections.Generic.KeyValuePair<int, string> CreateDebtorAndOutlet(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateDe" +
            "btorAndOutlet", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateDe" +
            "btorAndOutletResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> CreateDebtorAndOutletAsync(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateNe" +
            "wOutletFromTable", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateNe" +
            "wOutletFromTableResponse")]
        int CreateNewOutletFromTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateNe" +
            "wOutletFromTable", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateNe" +
            "wOutletFromTableResponse")]
        System.Threading.Tasks.Task<int> CreateNewOutletFromTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CheckOut" +
            "let", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CheckOut" +
            "letResponse")]
        int CheckOutlet(string paramOutletId, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CheckOut" +
            "let", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CheckOut" +
            "letResponse")]
        System.Threading.Tasks.Task<int> CheckOutletAsync(string paramOutletId, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateDe" +
            "btorAndOutlet2", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateDe" +
            "btorAndOutlet2Response")]
        System.Collections.Generic.KeyValuePair<int, string> CreateDebtorAndOutlet2(string paramDebtorTaxNumber, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateDe" +
            "btorAndOutlet2", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsDebtors_nonDataSets/CreateDe" +
            "btorAndOutlet2Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> CreateDebtorAndOutlet2Async(string paramDebtorTaxNumber, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDistributorsDebtorsChannel : DistributorMailSendler.DistributorsDebtors.IDistributorsDebtors, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DistributorsDebtorsClient : System.ServiceModel.ClientBase<DistributorMailSendler.DistributorsDebtors.IDistributorsDebtors>, DistributorMailSendler.DistributorsDebtors.IDistributorsDebtors {
        
        public DistributorsDebtorsClient() {
        }
        
        public DistributorsDebtorsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DistributorsDebtorsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DistributorsDebtorsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DistributorsDebtorsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.KeyValuePair<int, string> CreateDebtorAndOutlet(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode) {
            return base.Channel.CreateDebtorAndOutlet(paramDebtorTaxNumber, paramDebtorKPP, paramNameDebtor, paramDebtorAddress, paramNameOutlet, paramOutletKPP, paramOutletAddress, parameCodeDebtorInDistr, parameCodeOutletInDistr, paramDistrCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> CreateDebtorAndOutletAsync(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode) {
            return base.Channel.CreateDebtorAndOutletAsync(paramDebtorTaxNumber, paramDebtorKPP, paramNameDebtor, paramDebtorAddress, paramNameOutlet, paramOutletKPP, paramOutletAddress, parameCodeDebtorInDistr, parameCodeOutletInDistr, paramDistrCode);
        }
        
        public int CreateNewOutletFromTable() {
            return base.Channel.CreateNewOutletFromTable();
        }
        
        public System.Threading.Tasks.Task<int> CreateNewOutletFromTableAsync() {
            return base.Channel.CreateNewOutletFromTableAsync();
        }
        
        public int CheckOutlet(string paramOutletId, double paramDistrCode) {
            return base.Channel.CheckOutlet(paramOutletId, paramDistrCode);
        }
        
        public System.Threading.Tasks.Task<int> CheckOutletAsync(string paramOutletId, double paramDistrCode) {
            return base.Channel.CheckOutletAsync(paramOutletId, paramDistrCode);
        }
        
        public System.Collections.Generic.KeyValuePair<int, string> CreateDebtorAndOutlet2(string paramDebtorTaxNumber, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode) {
            return base.Channel.CreateDebtorAndOutlet2(paramDebtorTaxNumber, paramNameDebtor, paramDebtorAddress, paramNameOutlet, paramOutletAddress, parameCodeDebtorInDistr, parameCodeOutletInDistr, paramDistrCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> CreateDebtorAndOutlet2Async(string paramDebtorTaxNumber, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode) {
            return base.Channel.CreateDebtorAndOutlet2Async(paramDebtorTaxNumber, paramNameDebtor, paramDebtorAddress, paramNameOutlet, paramOutletAddress, parameCodeDebtorInDistr, parameCodeOutletInDistr, paramDistrCode);
        }
    }
}
