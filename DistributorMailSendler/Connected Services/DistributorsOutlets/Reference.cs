//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DistributorMailSendler.DistributorsOutlets {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressData", Namespace="http://schemas.datacontract.org/2004/07/dadatacsharp")]
    [System.SerializableAttribute()]
    public partial class AddressData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string areaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string area_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string area_type_fullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string blockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string block_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string block_type_fullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string city_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string city_type_fullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fias_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string flatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string flat_areaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string flat_priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string flat_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string geo_latField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string geo_lonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string houseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string house_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string house_type_fullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string kladr_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string okatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string oktmoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string postal_boxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string postal_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string qcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string qc_completeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string qc_geoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string qc_houseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string regionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string region_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string region_type_fullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string resultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string settlementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string settlement_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string settlement_type_fullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string square_meter_priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string streetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string street_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string street_type_fullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tax_officeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tax_office_legalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string timezoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string unparsed_partsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string area {
            get {
                return this.areaField;
            }
            set {
                if ((object.ReferenceEquals(this.areaField, value) != true)) {
                    this.areaField = value;
                    this.RaisePropertyChanged("area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string area_type {
            get {
                return this.area_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.area_typeField, value) != true)) {
                    this.area_typeField = value;
                    this.RaisePropertyChanged("area_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string area_type_full {
            get {
                return this.area_type_fullField;
            }
            set {
                if ((object.ReferenceEquals(this.area_type_fullField, value) != true)) {
                    this.area_type_fullField = value;
                    this.RaisePropertyChanged("area_type_full");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string block {
            get {
                return this.blockField;
            }
            set {
                if ((object.ReferenceEquals(this.blockField, value) != true)) {
                    this.blockField = value;
                    this.RaisePropertyChanged("block");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string block_type {
            get {
                return this.block_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.block_typeField, value) != true)) {
                    this.block_typeField = value;
                    this.RaisePropertyChanged("block_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string block_type_full {
            get {
                return this.block_type_fullField;
            }
            set {
                if ((object.ReferenceEquals(this.block_type_fullField, value) != true)) {
                    this.block_type_fullField = value;
                    this.RaisePropertyChanged("block_type_full");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city_type {
            get {
                return this.city_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.city_typeField, value) != true)) {
                    this.city_typeField = value;
                    this.RaisePropertyChanged("city_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city_type_full {
            get {
                return this.city_type_fullField;
            }
            set {
                if ((object.ReferenceEquals(this.city_type_fullField, value) != true)) {
                    this.city_type_fullField = value;
                    this.RaisePropertyChanged("city_type_full");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fias_id {
            get {
                return this.fias_idField;
            }
            set {
                if ((object.ReferenceEquals(this.fias_idField, value) != true)) {
                    this.fias_idField = value;
                    this.RaisePropertyChanged("fias_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string flat {
            get {
                return this.flatField;
            }
            set {
                if ((object.ReferenceEquals(this.flatField, value) != true)) {
                    this.flatField = value;
                    this.RaisePropertyChanged("flat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string flat_area {
            get {
                return this.flat_areaField;
            }
            set {
                if ((object.ReferenceEquals(this.flat_areaField, value) != true)) {
                    this.flat_areaField = value;
                    this.RaisePropertyChanged("flat_area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string flat_price {
            get {
                return this.flat_priceField;
            }
            set {
                if ((object.ReferenceEquals(this.flat_priceField, value) != true)) {
                    this.flat_priceField = value;
                    this.RaisePropertyChanged("flat_price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string flat_type {
            get {
                return this.flat_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.flat_typeField, value) != true)) {
                    this.flat_typeField = value;
                    this.RaisePropertyChanged("flat_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string geo_lat {
            get {
                return this.geo_latField;
            }
            set {
                if ((object.ReferenceEquals(this.geo_latField, value) != true)) {
                    this.geo_latField = value;
                    this.RaisePropertyChanged("geo_lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string geo_lon {
            get {
                return this.geo_lonField;
            }
            set {
                if ((object.ReferenceEquals(this.geo_lonField, value) != true)) {
                    this.geo_lonField = value;
                    this.RaisePropertyChanged("geo_lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string house {
            get {
                return this.houseField;
            }
            set {
                if ((object.ReferenceEquals(this.houseField, value) != true)) {
                    this.houseField = value;
                    this.RaisePropertyChanged("house");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string house_type {
            get {
                return this.house_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.house_typeField, value) != true)) {
                    this.house_typeField = value;
                    this.RaisePropertyChanged("house_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string house_type_full {
            get {
                return this.house_type_fullField;
            }
            set {
                if ((object.ReferenceEquals(this.house_type_fullField, value) != true)) {
                    this.house_type_fullField = value;
                    this.RaisePropertyChanged("house_type_full");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string kladr_id {
            get {
                return this.kladr_idField;
            }
            set {
                if ((object.ReferenceEquals(this.kladr_idField, value) != true)) {
                    this.kladr_idField = value;
                    this.RaisePropertyChanged("kladr_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string okato {
            get {
                return this.okatoField;
            }
            set {
                if ((object.ReferenceEquals(this.okatoField, value) != true)) {
                    this.okatoField = value;
                    this.RaisePropertyChanged("okato");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oktmo {
            get {
                return this.oktmoField;
            }
            set {
                if ((object.ReferenceEquals(this.oktmoField, value) != true)) {
                    this.oktmoField = value;
                    this.RaisePropertyChanged("oktmo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string postal_box {
            get {
                return this.postal_boxField;
            }
            set {
                if ((object.ReferenceEquals(this.postal_boxField, value) != true)) {
                    this.postal_boxField = value;
                    this.RaisePropertyChanged("postal_box");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string postal_code {
            get {
                return this.postal_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.postal_codeField, value) != true)) {
                    this.postal_codeField = value;
                    this.RaisePropertyChanged("postal_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string qc {
            get {
                return this.qcField;
            }
            set {
                if ((object.ReferenceEquals(this.qcField, value) != true)) {
                    this.qcField = value;
                    this.RaisePropertyChanged("qc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string qc_complete {
            get {
                return this.qc_completeField;
            }
            set {
                if ((object.ReferenceEquals(this.qc_completeField, value) != true)) {
                    this.qc_completeField = value;
                    this.RaisePropertyChanged("qc_complete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string qc_geo {
            get {
                return this.qc_geoField;
            }
            set {
                if ((object.ReferenceEquals(this.qc_geoField, value) != true)) {
                    this.qc_geoField = value;
                    this.RaisePropertyChanged("qc_geo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string qc_house {
            get {
                return this.qc_houseField;
            }
            set {
                if ((object.ReferenceEquals(this.qc_houseField, value) != true)) {
                    this.qc_houseField = value;
                    this.RaisePropertyChanged("qc_house");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string region {
            get {
                return this.regionField;
            }
            set {
                if ((object.ReferenceEquals(this.regionField, value) != true)) {
                    this.regionField = value;
                    this.RaisePropertyChanged("region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string region_type {
            get {
                return this.region_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.region_typeField, value) != true)) {
                    this.region_typeField = value;
                    this.RaisePropertyChanged("region_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string region_type_full {
            get {
                return this.region_type_fullField;
            }
            set {
                if ((object.ReferenceEquals(this.region_type_fullField, value) != true)) {
                    this.region_type_fullField = value;
                    this.RaisePropertyChanged("region_type_full");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string result {
            get {
                return this.resultField;
            }
            set {
                if ((object.ReferenceEquals(this.resultField, value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string settlement {
            get {
                return this.settlementField;
            }
            set {
                if ((object.ReferenceEquals(this.settlementField, value) != true)) {
                    this.settlementField = value;
                    this.RaisePropertyChanged("settlement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string settlement_type {
            get {
                return this.settlement_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.settlement_typeField, value) != true)) {
                    this.settlement_typeField = value;
                    this.RaisePropertyChanged("settlement_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string settlement_type_full {
            get {
                return this.settlement_type_fullField;
            }
            set {
                if ((object.ReferenceEquals(this.settlement_type_fullField, value) != true)) {
                    this.settlement_type_fullField = value;
                    this.RaisePropertyChanged("settlement_type_full");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string source {
            get {
                return this.sourceField;
            }
            set {
                if ((object.ReferenceEquals(this.sourceField, value) != true)) {
                    this.sourceField = value;
                    this.RaisePropertyChanged("source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string square_meter_price {
            get {
                return this.square_meter_priceField;
            }
            set {
                if ((object.ReferenceEquals(this.square_meter_priceField, value) != true)) {
                    this.square_meter_priceField = value;
                    this.RaisePropertyChanged("square_meter_price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string street {
            get {
                return this.streetField;
            }
            set {
                if ((object.ReferenceEquals(this.streetField, value) != true)) {
                    this.streetField = value;
                    this.RaisePropertyChanged("street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string street_type {
            get {
                return this.street_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.street_typeField, value) != true)) {
                    this.street_typeField = value;
                    this.RaisePropertyChanged("street_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string street_type_full {
            get {
                return this.street_type_fullField;
            }
            set {
                if ((object.ReferenceEquals(this.street_type_fullField, value) != true)) {
                    this.street_type_fullField = value;
                    this.RaisePropertyChanged("street_type_full");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tax_office {
            get {
                return this.tax_officeField;
            }
            set {
                if ((object.ReferenceEquals(this.tax_officeField, value) != true)) {
                    this.tax_officeField = value;
                    this.RaisePropertyChanged("tax_office");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tax_office_legal {
            get {
                return this.tax_office_legalField;
            }
            set {
                if ((object.ReferenceEquals(this.tax_office_legalField, value) != true)) {
                    this.tax_office_legalField = value;
                    this.RaisePropertyChanged("tax_office_legal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string timezone {
            get {
                return this.timezoneField;
            }
            set {
                if ((object.ReferenceEquals(this.timezoneField, value) != true)) {
                    this.timezoneField = value;
                    this.RaisePropertyChanged("timezone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string unparsed_parts {
            get {
                return this.unparsed_partsField;
            }
            set {
                if ((object.ReferenceEquals(this.unparsed_partsField, value) != true)) {
                    this.unparsed_partsField = value;
                    this.RaisePropertyChanged("unparsed_parts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="objectRecIDBaseID", Namespace="http://www.khortitsa.com/wcf/Money/2008")]
    [System.SerializableAttribute()]
    public partial class objectRecIDBaseID : DistributorMailSendler.DistributorsOutlets.objectMegaBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BaseID {
            get {
                return this.BaseIDField;
            }
            set {
                if ((this.BaseIDField.Equals(value) != true)) {
                    this.BaseIDField = value;
                    this.RaisePropertyChanged("BaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecID {
            get {
                return this.RecIDField;
            }
            set {
                if ((this.RecIDField.Equals(value) != true)) {
                    this.RecIDField = value;
                    this.RaisePropertyChanged("RecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="objectMegaBase", Namespace="http://schemas.datacontract.org/2004/07/MegaUtils_V3.objects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID))]
    public partial class objectMegaBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.khortitsa.com/wcf/Money/2008", ConfigurationName="DistributorsOutlets.IDistributorsOutlets")]
    public interface IDistributorsOutlets {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CreateDe" +
            "btorAndOutlet2", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CreateDe" +
            "btorAndOutlet2Response")]
        System.Collections.Generic.KeyValuePair<int, string> CreateDebtorAndOutlet2(string debtorTaxNumber, string nameDebtor, string debtorAddress, string nameOutlet, string outletAddress, string codeDebtorInDistr, string сodeOutletInDistr, double distrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CreateDe" +
            "btorAndOutlet2", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CreateDe" +
            "btorAndOutlet2Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> CreateDebtorAndOutlet2Async(string debtorTaxNumber, string nameDebtor, string debtorAddress, string nameOutlet, string outletAddress, string codeDebtorInDistr, string сodeOutletInDistr, double distrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CreateDe" +
            "btorAndOutlet", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CreateDe" +
            "btorAndOutletResponse")]
        System.Collections.Generic.KeyValuePair<int, string> CreateDebtorAndOutlet(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CreateDe" +
            "btorAndOutlet", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CreateDe" +
            "btorAndOutletResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> CreateDebtorAndOutletAsync(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/GetAddre" +
            "ssFromString", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/GetAddre" +
            "ssFromStringResponse")]
        DistributorMailSendler.DistributorsOutlets.AddressData GetAddressFromString(string paramAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/GetAddre" +
            "ssFromString", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/GetAddre" +
            "ssFromStringResponse")]
        System.Threading.Tasks.Task<DistributorMailSendler.DistributorsOutlets.AddressData> GetAddressFromStringAsync(string paramAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/FindOutl" +
            "etByKladrCode", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/FindOutl" +
            "etByKladrCodeResponse")]
        System.Collections.Generic.KeyValuePair<DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID, string> FindOutletByKladrCode(string paramCode, double paramDebtorCode, double paramDistrCode, string paramHome, string paramCorps, string paramApartment, string paramLitera, string paramOutletKPP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/FindOutl" +
            "etByKladrCode", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/FindOutl" +
            "etByKladrCodeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID, string>> FindOutletByKladrCodeAsync(string paramCode, double paramDebtorCode, double paramDistrCode, string paramHome, string paramCorps, string paramApartment, string paramLitera, string paramOutletKPP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/LinkAddr" +
            "essOutletByKladrCode", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/LinkAddr" +
            "essOutletByKladrCodeResponse")]
        DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID LinkAddressOutletByKladrCode(int paramOutletRecId, int paramOutletBaseId, string paramCode, string paramHome, string paramCorps, string paramApartment, string paramLitera, System.Nullable<double> paramDebtorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/LinkAddr" +
            "essOutletByKladrCode", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/LinkAddr" +
            "essOutletByKladrCodeResponse")]
        System.Threading.Tasks.Task<DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID> LinkAddressOutletByKladrCodeAsync(int paramOutletRecId, int paramOutletBaseId, string paramCode, string paramHome, string paramCorps, string paramApartment, string paramLitera, System.Nullable<double> paramDebtorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CheckAnd" +
            "CreateDebtor", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CheckAnd" +
            "CreateDebtorResponse")]
        double CheckAndCreateDebtor(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string parameCodeDebtorInDistr, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CheckAnd" +
            "CreateDebtor", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CheckAnd" +
            "CreateDebtorResponse")]
        System.Threading.Tasks.Task<double> CheckAndCreateDebtorAsync(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string parameCodeDebtorInDistr, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CheckAnd" +
            "CreateOutet", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CheckAnd" +
            "CreateOutetResponse")]
        DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID CheckAndCreateOutet(double paramDebtorCode, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, double paramGPSLatitude, double paramGPSLongitude, string parameCodeOutletInDistr, double paramDistrCode, string paramCode, string paramHome, string paramCorps, string paramApartment, string paramLitera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CheckAnd" +
            "CreateOutet", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/CheckAnd" +
            "CreateOutetResponse")]
        System.Threading.Tasks.Task<DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID> CheckAndCreateOutetAsync(double paramDebtorCode, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, double paramGPSLatitude, double paramGPSLongitude, string parameCodeOutletInDistr, double paramDistrCode, string paramCode, string paramHome, string paramCorps, string paramApartment, string paramLitera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateTr" +
            "adeOutletAddressToKladr", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateTr" +
            "adeOutletAddressToKladrResponse")]
        System.Tuple<int, int, string>[] UpdateTradeOutletAddressToKladr(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID[] paramListOutlets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateTr" +
            "adeOutletAddressToKladr", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateTr" +
            "adeOutletAddressToKladrResponse")]
        System.Threading.Tasks.Task<System.Tuple<int, int, string>[]> UpdateTradeOutletAddressToKladrAsync(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID[] paramListOutlets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/FindAddr" +
            "essByKladrCode", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/FindAddr" +
            "essByKladrCodeResponse")]
        string FindAddressByKladrCode(string paramCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/FindAddr" +
            "essByKladrCode", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/FindAddr" +
            "essByKladrCodeResponse")]
        System.Threading.Tasks.Task<string> FindAddressByKladrCodeAsync(string paramCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateGP" +
            "SOutlet", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateGP" +
            "SOutletResponse")]
        int UpdateGPSOutlet(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID paramOutlet, double paramGPSLatitude, double paramGPSLongitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateGP" +
            "SOutlet", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateGP" +
            "SOutletResponse")]
        System.Threading.Tasks.Task<int> UpdateGPSOutletAsync(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID paramOutlet, double paramGPSLatitude, double paramGPSLongitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/AddDistr" +
            "OutletId", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/AddDistr" +
            "OutletIdResponse")]
        int AddDistrOutletId(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID paramOutlet, string paramId, double paramDistrCode, bool paramForOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/AddDistr" +
            "OutletId", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/AddDistr" +
            "OutletIdResponse")]
        System.Threading.Tasks.Task<int> AddDistrOutletIdAsync(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID paramOutlet, string paramId, double paramDistrCode, bool paramForOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/DeleteDi" +
            "strOutletId", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/DeleteDi" +
            "strOutletIdResponse")]
        int DeleteDistrOutletId(string paramId, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/DeleteDi" +
            "strOutletId", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/DeleteDi" +
            "strOutletIdResponse")]
        System.Threading.Tasks.Task<int> DeleteDistrOutletIdAsync(string paramId, double paramDistrCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateDe" +
            "btorAndOutlet", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateDe" +
            "btorAndOutletResponse")]
        System.Collections.Generic.KeyValuePair<int, string> UpdateDebtorAndOutlet(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode, int paramOutletRecId, int paramOutletBaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateDe" +
            "btorAndOutlet", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateDe" +
            "btorAndOutletResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> UpdateDebtorAndOutletAsync(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode, int paramOutletRecId, int paramOutletBaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/InsertDi" +
            "stributorOutletProtocol", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/InsertDi" +
            "stributorOutletProtocolResponse")]
        int InsertDistributorOutletProtocol(System.Nullable<int> paramRecid, string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode, string paramLogin, System.Nullable<double> paramDebtorCode, System.Nullable<int> OutletRecId, string paramKLADRCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/InsertDi" +
            "stributorOutletProtocol", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/InsertDi" +
            "stributorOutletProtocolResponse")]
        System.Threading.Tasks.Task<int> InsertDistributorOutletProtocolAsync(System.Nullable<int> paramRecid, string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode, string paramLogin, System.Nullable<double> paramDebtorCode, System.Nullable<int> OutletRecId, string paramKLADRCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateDi" +
            "stributorOutletProtocol", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateDi" +
            "stributorOutletProtocolResponse")]
        int UpdateDistributorOutletProtocol(int paramRecid, string paramLogin, System.Nullable<double> paramDebtorCode, System.Nullable<int> OutletRecId, string paramKLADRCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateDi" +
            "stributorOutletProtocol", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/UpdateDi" +
            "stributorOutletProtocolResponse")]
        System.Threading.Tasks.Task<int> UpdateDistributorOutletProtocolAsync(int paramRecid, string paramLogin, System.Nullable<double> paramDebtorCode, System.Nullable<int> OutletRecId, string paramKLADRCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/MoveOutl" +
            "etToArea", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/MoveOutl" +
            "etToAreaResponse")]
        int MoveOutletToArea();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/MoveOutl" +
            "etToArea", ReplyAction="http://www.khortitsa.com/wcf/Money/2008/IDistributorsOutlets_nonDataSets/MoveOutl" +
            "etToAreaResponse")]
        System.Threading.Tasks.Task<int> MoveOutletToAreaAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDistributorsOutletsChannel : DistributorMailSendler.DistributorsOutlets.IDistributorsOutlets, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DistributorsOutletsClient : System.ServiceModel.ClientBase<DistributorMailSendler.DistributorsOutlets.IDistributorsOutlets>, DistributorMailSendler.DistributorsOutlets.IDistributorsOutlets {
        
        public DistributorsOutletsClient() {
        }
        
        public DistributorsOutletsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DistributorsOutletsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DistributorsOutletsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DistributorsOutletsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.KeyValuePair<int, string> CreateDebtorAndOutlet2(string debtorTaxNumber, string nameDebtor, string debtorAddress, string nameOutlet, string outletAddress, string codeDebtorInDistr, string сodeOutletInDistr, double distrCode) {
            return base.Channel.CreateDebtorAndOutlet2(debtorTaxNumber, nameDebtor, debtorAddress, nameOutlet, outletAddress, codeDebtorInDistr, сodeOutletInDistr, distrCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> CreateDebtorAndOutlet2Async(string debtorTaxNumber, string nameDebtor, string debtorAddress, string nameOutlet, string outletAddress, string codeDebtorInDistr, string сodeOutletInDistr, double distrCode) {
            return base.Channel.CreateDebtorAndOutlet2Async(debtorTaxNumber, nameDebtor, debtorAddress, nameOutlet, outletAddress, codeDebtorInDistr, сodeOutletInDistr, distrCode);
        }
        
        public System.Collections.Generic.KeyValuePair<int, string> CreateDebtorAndOutlet(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode) {
            return base.Channel.CreateDebtorAndOutlet(paramDebtorTaxNumber, paramDebtorKPP, paramNameDebtor, paramDebtorAddress, paramNameOutlet, paramOutletKPP, paramOutletAddress, parameCodeDebtorInDistr, parameCodeOutletInDistr, paramDistrCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> CreateDebtorAndOutletAsync(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode) {
            return base.Channel.CreateDebtorAndOutletAsync(paramDebtorTaxNumber, paramDebtorKPP, paramNameDebtor, paramDebtorAddress, paramNameOutlet, paramOutletKPP, paramOutletAddress, parameCodeDebtorInDistr, parameCodeOutletInDistr, paramDistrCode);
        }
        
        public DistributorMailSendler.DistributorsOutlets.AddressData GetAddressFromString(string paramAddress) {
            return base.Channel.GetAddressFromString(paramAddress);
        }
        
        public System.Threading.Tasks.Task<DistributorMailSendler.DistributorsOutlets.AddressData> GetAddressFromStringAsync(string paramAddress) {
            return base.Channel.GetAddressFromStringAsync(paramAddress);
        }
        
        public System.Collections.Generic.KeyValuePair<DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID, string> FindOutletByKladrCode(string paramCode, double paramDebtorCode, double paramDistrCode, string paramHome, string paramCorps, string paramApartment, string paramLitera, string paramOutletKPP) {
            return base.Channel.FindOutletByKladrCode(paramCode, paramDebtorCode, paramDistrCode, paramHome, paramCorps, paramApartment, paramLitera, paramOutletKPP);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID, string>> FindOutletByKladrCodeAsync(string paramCode, double paramDebtorCode, double paramDistrCode, string paramHome, string paramCorps, string paramApartment, string paramLitera, string paramOutletKPP) {
            return base.Channel.FindOutletByKladrCodeAsync(paramCode, paramDebtorCode, paramDistrCode, paramHome, paramCorps, paramApartment, paramLitera, paramOutletKPP);
        }
        
        public DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID LinkAddressOutletByKladrCode(int paramOutletRecId, int paramOutletBaseId, string paramCode, string paramHome, string paramCorps, string paramApartment, string paramLitera, System.Nullable<double> paramDebtorCode) {
            return base.Channel.LinkAddressOutletByKladrCode(paramOutletRecId, paramOutletBaseId, paramCode, paramHome, paramCorps, paramApartment, paramLitera, paramDebtorCode);
        }
        
        public System.Threading.Tasks.Task<DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID> LinkAddressOutletByKladrCodeAsync(int paramOutletRecId, int paramOutletBaseId, string paramCode, string paramHome, string paramCorps, string paramApartment, string paramLitera, System.Nullable<double> paramDebtorCode) {
            return base.Channel.LinkAddressOutletByKladrCodeAsync(paramOutletRecId, paramOutletBaseId, paramCode, paramHome, paramCorps, paramApartment, paramLitera, paramDebtorCode);
        }
        
        public double CheckAndCreateDebtor(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string parameCodeDebtorInDistr, double paramDistrCode) {
            return base.Channel.CheckAndCreateDebtor(paramDebtorTaxNumber, paramDebtorKPP, paramNameDebtor, paramDebtorAddress, parameCodeDebtorInDistr, paramDistrCode);
        }
        
        public System.Threading.Tasks.Task<double> CheckAndCreateDebtorAsync(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string parameCodeDebtorInDistr, double paramDistrCode) {
            return base.Channel.CheckAndCreateDebtorAsync(paramDebtorTaxNumber, paramDebtorKPP, paramNameDebtor, paramDebtorAddress, parameCodeDebtorInDistr, paramDistrCode);
        }
        
        public DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID CheckAndCreateOutet(double paramDebtorCode, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, double paramGPSLatitude, double paramGPSLongitude, string parameCodeOutletInDistr, double paramDistrCode, string paramCode, string paramHome, string paramCorps, string paramApartment, string paramLitera) {
            return base.Channel.CheckAndCreateOutet(paramDebtorCode, paramNameOutlet, paramOutletKPP, paramOutletAddress, paramGPSLatitude, paramGPSLongitude, parameCodeOutletInDistr, paramDistrCode, paramCode, paramHome, paramCorps, paramApartment, paramLitera);
        }
        
        public System.Threading.Tasks.Task<DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID> CheckAndCreateOutetAsync(double paramDebtorCode, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, double paramGPSLatitude, double paramGPSLongitude, string parameCodeOutletInDistr, double paramDistrCode, string paramCode, string paramHome, string paramCorps, string paramApartment, string paramLitera) {
            return base.Channel.CheckAndCreateOutetAsync(paramDebtorCode, paramNameOutlet, paramOutletKPP, paramOutletAddress, paramGPSLatitude, paramGPSLongitude, parameCodeOutletInDistr, paramDistrCode, paramCode, paramHome, paramCorps, paramApartment, paramLitera);
        }
        
        public System.Tuple<int, int, string>[] UpdateTradeOutletAddressToKladr(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID[] paramListOutlets) {
            return base.Channel.UpdateTradeOutletAddressToKladr(paramListOutlets);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<int, int, string>[]> UpdateTradeOutletAddressToKladrAsync(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID[] paramListOutlets) {
            return base.Channel.UpdateTradeOutletAddressToKladrAsync(paramListOutlets);
        }
        
        public string FindAddressByKladrCode(string paramCode) {
            return base.Channel.FindAddressByKladrCode(paramCode);
        }
        
        public System.Threading.Tasks.Task<string> FindAddressByKladrCodeAsync(string paramCode) {
            return base.Channel.FindAddressByKladrCodeAsync(paramCode);
        }
        
        public int UpdateGPSOutlet(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID paramOutlet, double paramGPSLatitude, double paramGPSLongitude) {
            return base.Channel.UpdateGPSOutlet(paramOutlet, paramGPSLatitude, paramGPSLongitude);
        }
        
        public System.Threading.Tasks.Task<int> UpdateGPSOutletAsync(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID paramOutlet, double paramGPSLatitude, double paramGPSLongitude) {
            return base.Channel.UpdateGPSOutletAsync(paramOutlet, paramGPSLatitude, paramGPSLongitude);
        }
        
        public int AddDistrOutletId(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID paramOutlet, string paramId, double paramDistrCode, bool paramForOrder) {
            return base.Channel.AddDistrOutletId(paramOutlet, paramId, paramDistrCode, paramForOrder);
        }
        
        public System.Threading.Tasks.Task<int> AddDistrOutletIdAsync(DistributorMailSendler.DistributorsOutlets.objectRecIDBaseID paramOutlet, string paramId, double paramDistrCode, bool paramForOrder) {
            return base.Channel.AddDistrOutletIdAsync(paramOutlet, paramId, paramDistrCode, paramForOrder);
        }
        
        public int DeleteDistrOutletId(string paramId, double paramDistrCode) {
            return base.Channel.DeleteDistrOutletId(paramId, paramDistrCode);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDistrOutletIdAsync(string paramId, double paramDistrCode) {
            return base.Channel.DeleteDistrOutletIdAsync(paramId, paramDistrCode);
        }
        
        public System.Collections.Generic.KeyValuePair<int, string> UpdateDebtorAndOutlet(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode, int paramOutletRecId, int paramOutletBaseId) {
            return base.Channel.UpdateDebtorAndOutlet(paramDebtorTaxNumber, paramDebtorKPP, paramNameDebtor, paramDebtorAddress, paramNameOutlet, paramOutletKPP, paramOutletAddress, parameCodeDebtorInDistr, parameCodeOutletInDistr, paramDistrCode, paramOutletRecId, paramOutletBaseId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>> UpdateDebtorAndOutletAsync(string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode, int paramOutletRecId, int paramOutletBaseId) {
            return base.Channel.UpdateDebtorAndOutletAsync(paramDebtorTaxNumber, paramDebtorKPP, paramNameDebtor, paramDebtorAddress, paramNameOutlet, paramOutletKPP, paramOutletAddress, parameCodeDebtorInDistr, parameCodeOutletInDistr, paramDistrCode, paramOutletRecId, paramOutletBaseId);
        }
        
        public int InsertDistributorOutletProtocol(System.Nullable<int> paramRecid, string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode, string paramLogin, System.Nullable<double> paramDebtorCode, System.Nullable<int> OutletRecId, string paramKLADRCode) {
            return base.Channel.InsertDistributorOutletProtocol(paramRecid, paramDebtorTaxNumber, paramDebtorKPP, paramNameDebtor, paramDebtorAddress, paramNameOutlet, paramOutletKPP, paramOutletAddress, parameCodeDebtorInDistr, parameCodeOutletInDistr, paramDistrCode, paramLogin, paramDebtorCode, OutletRecId, paramKLADRCode);
        }
        
        public System.Threading.Tasks.Task<int> InsertDistributorOutletProtocolAsync(System.Nullable<int> paramRecid, string paramDebtorTaxNumber, string paramDebtorKPP, string paramNameDebtor, string paramDebtorAddress, string paramNameOutlet, string paramOutletKPP, string paramOutletAddress, string parameCodeDebtorInDistr, string parameCodeOutletInDistr, double paramDistrCode, string paramLogin, System.Nullable<double> paramDebtorCode, System.Nullable<int> OutletRecId, string paramKLADRCode) {
            return base.Channel.InsertDistributorOutletProtocolAsync(paramRecid, paramDebtorTaxNumber, paramDebtorKPP, paramNameDebtor, paramDebtorAddress, paramNameOutlet, paramOutletKPP, paramOutletAddress, parameCodeDebtorInDistr, parameCodeOutletInDistr, paramDistrCode, paramLogin, paramDebtorCode, OutletRecId, paramKLADRCode);
        }
        
        public int UpdateDistributorOutletProtocol(int paramRecid, string paramLogin, System.Nullable<double> paramDebtorCode, System.Nullable<int> OutletRecId, string paramKLADRCode) {
            return base.Channel.UpdateDistributorOutletProtocol(paramRecid, paramLogin, paramDebtorCode, OutletRecId, paramKLADRCode);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDistributorOutletProtocolAsync(int paramRecid, string paramLogin, System.Nullable<double> paramDebtorCode, System.Nullable<int> OutletRecId, string paramKLADRCode) {
            return base.Channel.UpdateDistributorOutletProtocolAsync(paramRecid, paramLogin, paramDebtorCode, OutletRecId, paramKLADRCode);
        }
        
        public int MoveOutletToArea() {
            return base.Channel.MoveOutletToArea();
        }
        
        public System.Threading.Tasks.Task<int> MoveOutletToAreaAsync() {
            return base.Channel.MoveOutletToAreaAsync();
        }
    }
}
